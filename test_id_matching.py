#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è ID –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
"""

def test_id_extraction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –∏–∑ —Ç–µ–∫—Å—Ç–∞ –æ–ø—Ü–∏–∏"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_options = [
        "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤ (ID:123)",
        "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤ (ID:456)",
        "–°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤ (ID:789)",
        "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞ (ID:101)"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID –∏–∑ –æ–ø—Ü–∏–π –æ–ø—Ä–æ—Å–∞...")
    
    for i, option_text in enumerate(test_options):
        try:
            # –õ–æ–≥–∏–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID (–∫–∞–∫ –≤ handle_poll)
            if "(ID:" in option_text:
                id_start = option_text.find("(ID:") + 4
                id_end = option_text.find(")", id_start)
                candidate_id = int(option_text[id_start:id_end])
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è
                name_end = option_text.find(" (ID:")
                name = option_text[:name_end] if name_end != -1 else option_text
                
                print(f"  ‚úÖ –û–ø—Ü–∏—è {i}: '{name}' -> ID: {candidate_id}")
            else:
                print(f"  ‚ùå –û–ø—Ü–∏—è {i}: '{option_text}' - –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ID")
                
        except (ValueError, IndexError) as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ '{option_text}': {e}")
    
    print("‚úÖ –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID –∑–∞–≤–µ—Ä—à–µ–Ω!")

def test_candidate_matching():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ ID"""
    
    # –°–∏–º—É–ª—è—Ü–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    candidates = [
        {"id": 123, "name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "votes": 0},
        {"id": 456, "name": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "votes": 0},
        {"id": 789, "name": "–°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤", "votes": 0}
    ]
    
    # –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø—Ä–æ—Å–∞
    poll_results = [
        {"text": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤ (ID:123)", "votes": 5},
        {"text": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤ (ID:456)", "votes": 3},
        {"text": "–°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤ (ID:789)", "votes": 7}
    ]
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤...")
    
    for poll_option in poll_results:
        try:
            if "(ID:" in poll_option["text"]:
                id_start = poll_option["text"].find("(ID:") + 4
                id_end = poll_option["text"].find(")", id_start)
                candidate_id = int(poll_option["text"][id_start:id_end])
                
                # –ù–∞—Ö–æ–¥–∏–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø–æ ID
                candidate = next((c for c in candidates if c["id"] == candidate_id), None)
                if candidate:
                    old_votes = candidate["votes"]
                    candidate["votes"] = poll_option["votes"]
                    print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {candidate['name']}: {old_votes} -> {candidate['votes']} –≥–æ–ª–æ—Å–æ–≤")
                else:
                    print(f"  ‚ùå –ö–∞–Ω–¥–∏–¥–∞—Ç —Å ID {candidate_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
        except (ValueError, IndexError) as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ '{poll_option['text']}': {e}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    winner = max(candidates, key=lambda c: c["votes"])
    print(f"\nüèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner['name']} —Å {winner['votes']} –≥–æ–ª–æ—Å–∞–º–∏")
    
    print("‚úÖ –¢–µ—Å—Ç —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_id_extraction()
    test_candidate_matching() 