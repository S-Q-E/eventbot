import logging
from aiogram import Bot
from db.database import get_db, Registration
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


async def send_feedback_request(bot: Bot, event_id: int, event_name: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã –ø–æ –∑–∞–≤–µ—Ä—à–∏–≤—à–µ–º—É—Å—è —Å–æ–±—ã—Ç–∏—é.
    """
    try:
        db = next(get_db())
        registrations = db.query(Registration).filter_by(event_id=event_id).all()

        get_feedback = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data=f"send_feedback_{event_id}")
            ]
        ])

        for registration in registrations:
            user_id = registration.user_id
            await bot.send_message(
                chat_id=user_id,
                text=f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏–Ω—è–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏ \"{event_name}\"! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ —Å–æ–±—ã—Ç–∏–∏.",
                reply_markup=get_feedback
            )
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã –¥–ª—è —Å–æ–±—ã—Ç–∏—è \"{event_name}\".")
    except Exception as e:
        logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ç–∑—ã–≤—ã {e}")