import random
import logging
import os
from dotenv import load_dotenv
from aiogram import Bot
from db.database import get_db, Registration, Event, User
from datetime import datetime
load_dotenv()

CHAT_ID = os.getenv("CHAT_ID")


async def divide_teams_for_current_event(bot: Bot):
    """
    –î–µ–ª–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ (–∞–∫—Ç–∏–≤–Ω–æ–≥–æ) —Å–æ–±—ã—Ç–∏—è –Ω–∞ –¥–≤–µ –∫–æ–º–∞–Ω–¥—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –º–∞—Ç—á–∞
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∏ —ç–º–æ–¥–∑–∏.
    –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ event_time <= now –∏ is_checked == False.
    –ü–æ—Å–ª–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è is_checked=True, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
    """
    db = next(get_db())
    try:
        now = datetime.utcnow()
        # –í—ã–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –Ω–∞—á–∞–ª–æ—Å—å –∏ –µ—â–µ –Ω–µ –±—ã–ª–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        event = (
            db.query(Event)
            .filter(Event.event_time <= now, Event.is_team_divide == False)
            .order_by(Event.event_time.desc())
            .first()
        )
        if not event:
            await bot.send_message(chat_id=CHAT_ID, text="–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥.")
            return

        registrations = db.query(Registration).filter_by(event_id=event.id).all()
        players = [reg.user for reg in registrations if reg.user is not None]
        if not players:
            await bot.send_message(chat_id=CHAT_ID, text="–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥.")
            return

        # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
        random.shuffle(players)
        n = len(players)
        mid = n // 2
        team1 = players[:mid]
        team2 = players[mid:]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —ç–º–æ–¥–∑–∏
        team1_text = "\n".join([f"‚ö°Ô∏è {p.first_name} {p.last_name or ''}".strip() for p in team1])
        team2_text = "\n".join([f"üî• {p.first_name} {p.last_name or ''}".strip() for p in team2])

        message_text = (
            f"üèê <b>–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –¥–ª—è –º–∞—Ç—á–∞ ¬´{event.name}¬ª</b> üèê\n\n"
            f"üí™ <b>–ö–æ–º–∞–Ω–¥–∞ 1</b> ({len(team1)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤):\n{team1_text}\n\n"
            f"ü§© <b>–ö–æ–º–∞–Ω–¥–∞ 2</b> ({len(team2)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤):\n{team2_text}\n\n"
            f"–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –∏ –æ—Ç–ª–∏—á–Ω–æ–π –∏–≥—Ä—ã! üéâ"
        )

        await bot.send_message(chat_id=CHAT_ID, text=message_text)

        # –ü–æ–º–µ—á–∞–µ–º —Å–æ–±—ã—Ç–∏–µ, –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ, —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∏—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ
        event.is_team_divide = True
        db.commit()
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–±—ã—Ç–∏—è: %s", e)
    finally:
        db.close()