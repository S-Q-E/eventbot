import os
import random
import logging
from datetime import datetime, timedelta
from aiogram import Bot
from db.database import get_db, Registration, Event, User
from dotenv import load_dotenv

load_dotenv()
CHAT_ID = os.getenv("CHAT_ID")


async def divide_teams_for_current_event(bot: Bot):
    """
    –î–µ–ª–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–Ω–æ–π –ª–æ–≥–∏–∫–µ
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∏ —ç–º–æ–¥–∑–∏.
    –ü–æ—Å–ª–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ–º–µ—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ.
    """
    db = next(get_db())
    try:
        now = datetime.now()
        in_10_min = now + timedelta(minutes=10)

        event = (
            db.query(Event)
                .filter(Event.event_time > now,
                        Event.event_time <= in_10_min,
                        Event.is_team_divide == False)
                .order_by(Event.event_time)
                .first()
        )

        if not event:
            logging.info("–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–µ 10 –º–∏–Ω—É—Ç")
            return

        registrations = db.query(Registration).filter_by(event_id=event.id).all()
        players = [reg.user for reg in registrations if reg.user]
        if len(players) < 8:
            await bot.send_message(chat_id=CHAT_ID, text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –∏–≥—Ä—ã")
            event.is_team_divide = True
            db.commit()
        else:
            random_player = random.choice(players)
            await bot.send_message(
                chat_id=CHAT_ID,
                text=(
                    "–ò–≥—Ä–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç!\n\n"
                    f"–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –º—è—á: <b>{random_player.first_name} {random_player.last_name}</b>"
                )
            )
        event.is_team_divide = True
        db.commit()
        # # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–º–∞–Ω–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤
        # team_structure = []
        # if total_players == 8:
        #     team_structure = [4, 4]
        # elif total_players == 9:
        #     team_structure = [5, 4]
        # elif total_players == 10:
        #     team_structure = [5, 5]
        # elif total_players == 11:
        #     team_structure = [5, 6]
        # elif total_players == 12:
        #     team_structure = [6, 6]
        # elif total_players == 13:
        #     team_structure = [6, 7]
        # elif total_players == 14:
        #     team_structure = [7, 7]
        # elif total_players == 15:
        #     team_structure = [6, 6, 3]
        # elif total_players == 16:
        #     team_structure = [6, 6, 4]
        # elif total_players == 17:
        #     team_structure = [6, 6, 5]
        # elif total_players == 18:
        #     team_structure = [6, 6, 6]
        # elif total_players == 19:
        #     team_structure = [6, 6, 7]
        # elif total_players == 20:
        #     team_structure = [6, 7, 7]
        # elif total_players == 21:
        #     team_structure = [7, 7, 7]

        # # –†–∞–∑–¥–µ–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
        # teams = []
        # start_index = 0
        # for size in team_structure:
        #     team = players[start_index:start_index + size]
        #     teams.append(team)
        #     start_index += size
        #
        # # –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥
        # team_emojis = ["üí™", "ü§©", "üî•"]
        #
        # # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        # teams_text = ""
        # for idx, team in enumerate(teams):
        #     emoji = team_emojis[idx] if idx < len(team_emojis) else ""
        #     team_names = "\n".join([f"{emoji} {player.first_name} {player.last_name or ''}".strip() for player in team])
        #     teams_text += f"<b>–ö–æ–º–∞–Ω–¥–∞ {idx + 1}</b> ({len(team)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤):\n{team_names}\n\n"
        #
        # message_text = (
        #     f"üèê <b>–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –¥–ª—è –º–∞—Ç—á–∞ ¬´{event.name}¬ª</b> üèê\n\n"
        #     f"{teams_text}"
        #     f"–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏ –∏ –æ—Ç–ª–∏—á–Ω–æ–π –∏–≥—Ä—ã! üéâ\n\n"
        #     f"–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –º—è—á <b>{random_player.user.first_name} {random_player.user.last_name}</b>"
        # )
        #
        # await bot.send_message(chat_id=CHAT_ID, text=message_text, parse_mode="HTML")
        #
        # # –ü–æ–º–µ—á–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω–æ–µ
        # event.is_team_divide = True
        # db.commit()
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–±—ã—Ç–∏—è: %s", e)
    finally:
        db.close()
