import logging
from aiogram import types, Router
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db.database import get_db, User

logging.basicConfig(
    level=logging.INFO,
    format="%(filename)s:%(lineno)d #%(levelname)-8s "
           "[%(asctime)s] - %(name)s - %(message)s",
)

start_router = Router()


@start_router.message(Command("start"))
async def start_command(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ü–∏—é
    """
    db = next(get_db())

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id

    # –ö–Ω–æ–ø–∫–∏
    events_button = InlineKeyboardButton(text="üí¨ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è", callback_data="events_list")
    registration_button = InlineKeyboardButton(text="‚ûï –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data="start_reg")

    try:
        user = db.query(User).filter_by(id=user_id).first()
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        logging.info(f"–û—à–∏–±–∫–∞ –≤ start_command.py {e}")

        return

    if not user:
        markup = InlineKeyboardMarkup(inline_keyboard=[[registration_button], [events_button]])
        try:
            new_user = User(id=user_id, username=message.from_user.username)
            db.add(new_user)
            db.commit()
            await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.username}!</b>\n\n"
                                 f"‚úÖ –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π\n"
                                 f"‚úÖ –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–ª—è —Å–µ–±—è, –≤—ã–±—Ä–∞–≤ –ª–æ–∫–∞—Ü–∏—é –∏ –≤—Ä–µ–º—è", reply_markup=markup)
        except Exception as e:
            await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n"
                                 f"–û—à–∏–±–∫–∞{e}")
    else:
        markup = InlineKeyboardMarkup(inline_keyboard=[[events_button], [registration_button]])
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.username}!</b>\n\n"
                             f"‚úÖ –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π\n"
                             f"‚úÖ –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–ª—è —Å–µ–±—è, –≤—ã–±—Ä–∞–≤ –ª–æ–∫–∞—Ü–∏—é –∏ –≤—Ä–µ–º—è.\n\n"
                             , reply_markup=markup)
