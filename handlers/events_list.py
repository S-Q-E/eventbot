from aiogram import Router, types,F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db.database import get_db, Event

event_list_router = Router()


# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
@event_list_router.callback_query(F.data == 'events')
async def list_events(callback_query: types.CallbackQuery):
    await callback_query.message.edit_reply_markup(reply_markup=None)
    await callback_query.message.answer("–°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π...")
    db = next(get_db())
    events = db.query(Event).all()

    if events:
        for event in events:
            join_button = InlineKeyboardButton(
                text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
                callback_data=f"join_{event.id}"
            )
            markup = InlineKeyboardMarkup(inline_keyboard=[[join_button]])
            await callback_query.message.answer(
                f"üéâ <b>{event.name}</b>\n"
                f"üïí <b>–î–∞—Ç–∞:</b> {event.event_time.strftime('%d %B')} \n"
                f"üìç <b>–ê–¥—Ä–µ—Å:</b> <i>{event.address}</i> \n\n"
                f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {event.description}\n",
                reply_markup=markup,
                parse_mode="HTML"
            )

    else:
        await callback_query.message.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.")

