from aiogram import types, F, Router
from db.database import get_db, Event
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
import logging

event_detail_router = Router()


@event_detail_router.callback_query(F.data.startswith("details_"))
async def event_details(callback: types.CallbackQuery):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–±—ã—Ç–∏—è –∏–∑ callback data
        event_id = int(callback.data.split("_")[-1])
        db = next(get_db())
        event = db.query(Event).filter_by(id=event_id).first()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–±—ã—Ç–∏–µ
        if not event:
            await callback.answer("‚ùó –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", show_alert=True)
            return

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è
        formatted_time = event.event_time.strftime("%d.%m.%Y %H:%M")

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ–±—ã—Ç–∏–∏
        event_info = (
            f"<b>üìÖ {event.name}</b>\n\n"
            f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {event.description}\n\n"
            f"üìç <b>–ê–¥—Ä–µ—Å:</b> {event.address}\n"
            f"üïí <b>–í—Ä–µ–º—è:</b> {formatted_time}\n"
            f"üí∞ <b>–¶–µ–Ω–∞:</b> {event.price} —Ä—É–±.\n"
            f"üë• <b>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> {event.current_participants}/{event.max_participants}"
        )

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
        register_button = InlineKeyboardButton(text="üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"join_{event_id}")
        back_button = InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="events_list")
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[register_button], [back_button]])

        await callback.message.answer(event_info, reply_markup=keyboard, parse_mode="HTML")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ event_details.py: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–±—ã—Ç–∏—è.", show_alert=True)
