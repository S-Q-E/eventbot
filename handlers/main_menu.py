from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# from utils.reg_required import registration_required
from db.database import get_db, User

main_menu_router = Router()


# @registration_required
@main_menu_router.message(Command("main_menu"))
@main_menu_router.callback_query(F.data == "main_menu")
async def main_menu(message: types.Message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ü–∏—é
    """

    user_id = message.from_user.id
    db = next(get_db())

    try:
        user = db.query(User).filter_by(id=user_id).first()
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

        return

    create_event = InlineKeyboardButton(text="üéâ –°–æ–∑–¥–∞—Ç—å event", callback_data="create_event")
    events_button = InlineKeyboardButton(text="üí¨ –î–æ—Å—Ç—É–ø–Ω—ã–µ event-—ã", callback_data="events")
    my_events_button = InlineKeyboardButton(text="üìÜ –ú–æ–∏ –∑–∞–ø–∏—Å–∏", callback_data="my_events")
    user_list_botton = InlineKeyboardButton(text="‚ù§ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –±–æ—Ç–∞", callback_data="user_list")
    add_admin_button = InlineKeyboardButton(text="üòé –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="set_admin")

    admin_markup = InlineKeyboardMarkup(inline_keyboard=[[events_button], [my_events_button],
                                                         [create_event], [user_list_botton],
                                                         [add_admin_button]])

    reg_user_markup = InlineKeyboardMarkup(inline_keyboard=[[events_button], [my_events_button]])
    if user:
        if user.is_admin:
            await message.answer("*******EVENTBOT********\n\n"
                                 f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! {message.from_user.username}</b>\n", reply_markup=admin_markup)
        else:
            await message.answer("*******EVENTBOT********\n\n"
                                 f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! {message.from_user.username}</b>\n", reply_markup=reg_user_markup)
    else:
        await message.answer("*******EVENTBOT********\n\n"
                             f"<b>–í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n"
                             f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</b?>")
