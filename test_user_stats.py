#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import logging
from db.database import get_db, User

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_user_statistics():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    db = next(get_db())
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–≥—Ä–∞–º–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ —É–±—ã–≤–∞–Ω–∏—é
        users = db.query(User).filter(User.user_games > 0).order_by(User.user_games.desc()).all()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–≥—Ä–∞–º–∏")
        
        if not users:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–≥—Ä–∞–º–∏")
            return
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —Ç–µ–∫—É—â–µ–≥–æ –¥–ª—è —Ç–µ—Å—Ç–∞
        current_user = users[0]
        current_user_id = current_user.id
        
        print(f"\nüë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {current_user.first_name} {current_user.last_name} (ID: {current_user.id})")
        print(f"üéÆ –ò–≥—Ä —É —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {current_user.user_games}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–æ–ø-10
        print("\nüìä –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–∞—Ç—á–µ–π:")
        medals = ["üëë", "ü•à", "ü•â"]
        
        for i, user in enumerate(users[:10], 1):
            if i <= 3:
                print(f"  {medals[i-1]}{user.first_name} {user.last_name} {user.user_games} –º–∞—Ç—á–µ–π")
            else:
                print(f"  {i}. {user.first_name} {user.last_name} {user.user_games} –º–∞—Ç—á–µ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_user_position = None
        for i, user in enumerate(users, 1):
            if user.id == current_user_id:
                current_user_position = i
                break
        
        print(f"\nüìç –ü–æ–∑–∏—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {current_user_position}")
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Ç–æ–ø-10, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –ø–æ–∑–∏—Ü–∏—é
        if current_user_position and current_user_position > 10:
            current_user_games = current_user.user_games
            games_text = "–º–∞—Ç—á–µ–π" if current_user_games != 1 else "–º–∞—Ç—á"
            print(f"  {current_user_position}. –í—ã {current_user_games} {games_text}")
        
        print("\n‚úÖ –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    finally:
        db.close()

def simulate_stats_output():
    """
    –°–∏–º—É–ª–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–∫ –≤ –±–æ—Ç–µ
    """
    print("\nüì± –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–≤–æ–¥–∞ –≤ –±–æ—Ç–µ:")
    print("=" * 50)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    users_data = [
        {"name": "–í–∞—Å–∏–ª–∏–π –ö–æ–∑–ª–æ–≤", "games": 7},
        {"name": "–ì—Ä–∏–≥–æ—Ä–∏–π –ì", "games": 6},
        {"name": "–¢–∞—Ç—å—è–Ω–∞ –ö–æ–∑–ª–æ–≤–∞", "games": 5},
        {"name": "–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤", "games": 4},
        {"name": "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", "games": 3},
        {"name": "–î–º–∏—Ç—Ä–∏–π –ò–≤–∞–Ω–æ–≤", "games": 2},
        {"name": "–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞", "games": 2},
        {"name": "–°–µ—Ä–≥–µ–π –ü–µ—Ç—Ä–æ–≤", "games": 1},
        {"name": "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", "games": 1},
        {"name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "games": 1},
    ]
    
    current_user = {"name": "–í—ã", "games": 1, "position": 34}
    
    stats_text = "üìä <b>–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–∞—Ç—á–µ–π:</b>\n\n"
    
    medals = ["üëë", "ü•à", "ü•â"]
    
    for i, user in enumerate(users_data, 1):
        if i <= 3:
            stats_text += f"{medals[i-1]}{user['name']} {user['games']} –º–∞—Ç—á–µ–π\n"
        else:
            stats_text += f"{i}. {user['name']} {user['games']} –º–∞—Ç—á–µ–π\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if current_user["position"] > 10:
        games_text = "–º–∞—Ç—á" if current_user["games"] == 1 else "–º–∞—Ç—á–µ–π"
        stats_text += f"\n{current_user['position']}. {current_user['name']} {current_user['games']} {games_text}"
    
    print(stats_text)
    print("=" * 50)

if __name__ == "__main__":
    test_user_statistics()
    simulate_stats_output() 